from datetime import timedelta
from wom.app_logic.service_func import (convert_date as c_date,
                                        datedif)


# даты для продления ЛН на ВК
def extension_days_15(date):
    '''
    Cоздание двух дат для продления листа нетрудоспособности:
    следующая дата после ВК, продление на 15 дней
    (если выпадает на выходные, то до пятницы)

    Функция принимает 1 число в формате 'дд.мм.гггг'| Дата врачебной комиссии
        Возвращает две даты в формате 'дд.мм.гггг'
        1 - с какой даты ЛН продляется
        2 - до какой даты ЛН продляется
    '''
    # конвертируем дату в datetime.datetime
    date = c_date(date)

    date1 = date + timedelta(1)  # переменная date1 - с какой даты ЛН продляем
    # переменная date2 - до какой даты ЛН продляем
    date2 = date + timedelta(15)
    if int(date2.strftime("%w")) == 6:  # если суббота, то делаем пятницу
        date2 -= timedelta(1)
    elif int(date2.strftime("%w")) == 0:  # если воскресение, то делаем пятницу
        date2 -= timedelta(2)

    # выводим 2 даты в формате 'дд.мм.гггг'
    return (date1.strftime("%d.%m.%Y"), date2.strftime("%d.%m.%Y"))


# определение даты ВК для продления ЛН
def set_medical_commission_date(last_sheet_date, adm_day):
    ''' Определение даты врачебной комиссии по продлению ЛН (стационар)
            Функция принимает 2 аргумента
            1 - дата до которой продлен лист нетрудоспособности
            2 - день поступления

            Возвращает дату врачебной комиссии в формате "дд.мм.гггг"

    '''
    # конвертируем даты в datetime.datetime
    date1, date2 = c_date(last_sheet_date), c_date(adm_day)
    # если ЛН продлен до СБ
    if int(date1.strftime("%w")) == 6:
        # если продление ЛН в сроке госпитализации
        if date1 >= date2:
            # делаем дату ВК ПТ
            medical_commission_date = date1 - timedelta(1)
        else:
            medical_commission_date = date2
    # если ЛН продлен до ВС
    elif int(date1.strftime("%w")) == 0:
        if date1 >= date2:
            # делаем дату ВК ПТ
            medical_commission_date = date1 - timedelta(2)
        else:
            medical_commission_date = date2
    else:
        # если ЛН продлен до дня, меньшего, чем день поступления
        if date1 < date2:
            # дата ВК - день поступления
            medical_commission_date = date2
        else:
            # дата ВК - последний день продленного ЛН
            medical_commission_date = date1

    return medical_commission_date.strftime("%d.%m.%Y")


# добавление описательных фраз по ВК по ЛН
def create_frase_med_commission(d):
    # отпределяем первичный ли лист
    if d['первичный_лн'] == d['С_какого_числа_ЛН_на_руках']:
        d['вставка_в_лн_1'] = 'Первичный'
        d['вставка_в_лн_2'] = 'продолжение'
    else:
        d['вставка_в_лн_1'] = 'Продолжение'
        d['вставка_в_лн_2'] = 'первичный'
    # собираем данные ЛН в фразу
    ln_list = [d['С_какого_числа_ЛН_на_руках'],
               d['По_какое_число_продлен_ЛН']]
    ln_list = [d[f'ЛН_номер_1'], *ln_list]
    d[f'ЛН_1'] = f'\n    1) ЛН №{ln_list[0]} с {ln_list[1]} по {ln_list[2]}'


# проверка необходимости и обработка данных по ЛН
def refresh_worklist_data(d):
    '''

    '''
    # проверяем, нужно ли обрабатывать данные по ЛН
    if d['нужда_в_ЛН']:
        # определяем дату ВК
        d['дата_ВК'] = set_medical_commission_date(
            d['По_какое_число_продлен_ЛН'],
            d['дата_поступления'])
        # считаем количество дней нетрудоспособности
        d['дни_по_лн'] = datedif(
            d['первичный_лн'],
            d['дата_ВК'])
        # добавляем фразы и подписи
        create_frase_med_commission(d)
        # продляем ЛН
        d['Продление_С'], d['Продление_ПО'] = extension_days_15(d['дата_ВК'])
        d['продление_ЛН'] = f"с {d['Продление_С']} по {d['Продление_ПО']}"

        # если необходимо повторное ВК
        if c_date(d['Продление_ПО']) < c_date(d['дата_выписки']):
            d['дата_ВК_2'] = d['Продление_ПО']
            d['дни_по_лн_2'] = datedif(
                d['первичный_лн'],
                d['дата_ВК_2'])
            d['Продление_С_2'] = (c_date(d['Продление_ПО']) + timedelta(1)).strftime("%d.%m.%Y")
            d['Продление_ПО_2'] = d['дата_выписки']
            extension_2 = [d['Продление_С_2'], d['Продление_ПО_2']]
            d['продление_ЛН_2'] = f'с {extension_2[0]} по {extension_2[1]}'

        # дополнительное ВК для выписки и продления ЛН
        # для амбулаторного лечения
        d['дата_ВК_вып'] = d['дата_выписки']
        d['дни_по_лн_вып'] = datedif(
            d['первичный_лн'],
            d['дата_ВК_вып'])
        d['Продление_С_вып'] = c_date(d['дата_ВК_вып']) + timedelta(1)
        d['Продление_ПО_вып'] = c_date(d['дата_ВК_вып']) + timedelta(2)
        week_day_out = c_date(d['дата_выписки_план']).strftime('%w')
        if week_day_out in {4, 5}:
            d['Продление_ПО_вып'] = c_date(d['дата_ВК_вып']) + timedelta(4)
        # Важно! Чтоб в словаре не было datetime.datetime(!)
        d['Продление_С_вып'] = d['Продление_С_вып'].strftime("%d.%m.%Y")
        d['Продление_ПО_вып'] = d['Продление_ПО_вып'].strftime("%d.%m.%Y")

        extension_v = [d['Продление_С_вып'],
                       d['Продление_ПО_вып']]
        d['продление_ЛН_вып'] = f'с {extension_v[0]} по {extension_v[1]}'

        # определяем впервые ли ВК
        if d['дни_по_лн'] > 15:
            count = (d['дни_по_лн'] // 15) + 1
            d['вк_счет'] = f'Повторно (~{count})'
        else:
            d['вк_счет'] = 'Впервые'
