from wom.app_logic.service_func import calc_BMI


def update_after_obj_st(d, time_line, i=None):
    '''
    '''
    if time_line == 'первичный':
        x = ''
    elif time_line == f'динамика_{i}':
        x = f'_{i}'

    d['анамнез_дополненный'] = f"{d['анамнез']}. В связи с сохраняющимся "\
                               f"ограничением самостоятельного перемещения и "\
                               f"самообслуживания, на основании приказа "\
                               f"Министерства здравоохранения Российской "\
                               f"Федерации от 30 июля 2020 г. N 788н 'Об "\
                               f"утверждении Порядка организации "\
                               f"медицинской реабилитации взрослых' "\
                               f"поступает в отделение медицинской "\
                               f"реабилитации ГБУЗ ПК ПККГВВ "\
                               f"в плановом порядке."
    if not d['нужда_в_ЛН']:
        d['экспертный_анамнез'] = f"{d['социальный_статус']}."\
                                  f" Лист нетрудоспособности "\
                                  f"{d['ЛН_инфо_нужда']}."
    else:
        d['экспертный_анамнез'] = f"{d['социальный_статус']}. "\
                                  f"Лист нетрудоспособности: "\
                                  f"{d['ЛН_инфо_нужда']} "\
                                  f"с {d['первичный_лн']}.\n" \
                                  f"ЛН № {d['ЛН_номер_1']} "\
                                  f"с {d['С_какого_числа_ЛН_на_руках']} "\
                                  f"по {d['По_какое_число_продлен_ЛН']}\n" \
                                  f"Место работы - {d['место_работы_1']}, "\
                                  f"{d['должность_1']}"

    if d['аллергия_чек'] == 'Отрицает':
        d['аллергологический_анамнез'] = f"На лекарственные средства "\
                                         f"аллергические реакции отрицает"
    elif d['аллергия_чек'] == 'ЕСТЬ':
        d['аллергологический_анамнез'] = d['аллергия']

    if d['эпид_анамнез_чек'] == 'Спокойный':
        d['Эпидемиологический_анамнез'] = f"спокоен, за пределы Пермского "\
                                          f"края за последний месяц не "\
                                          f"выезжал, с родственниками, "\
                                          f"покидавшими территорию Пермского "\
                                          f"края за последний месяц, "\
                                          f"не контактировал, лихорадку в "\
                                          f"течение последнего месяца "\
                                          f"отрицает. С больными COVID-19 "\
                                          f"контакта не было. "\
                                          f"Карантина в доме нет."
    elif d['эпид_анамнез_чек'] == 'отягощен':
        d['Эпидемиологический_анамнез'] = f"{d['эпид_анамнез_чек']}, "\
                                          f"{d['эпид_анамнез']}"

    if d['принимает_медикаменты_чек'] == 'Не принимает':
        d['медикаменты_прием'] = d['принимает_медикаменты_чек']
    elif d['принимает_медикаменты_чек'] in {'Ситуационно', 'Постоянно'}:
        d['медикаменты_прием'] = f"{d['принимает_медикаменты_чек']} принимает"\
                                 f" {d['принимает_медикаменты']}"

    d['перечень_хронических_заболеваний'] = ''
    if d['ГБ_чек']:
        d['перечень_хронических_заболеваний'] += 'Гипертоническая болезнь, '
    if d['СД_чек']:
        d['перечень_хронических_заболеваний'] += 'Сахарный диабет, '
        d['стол'] = '9'
        d['СД_Стат_1'] = 'Сопутствующий'
        d['СД_Стат_2'] = 'E11.8'
        d['СД_Стат_3'] = 'Инсулиннезависимый сахарный '\
                         'диабет с неуточненными осложнениями'
    else:
        d['стол'] = '15'
        d['СД_Стат_1'] = ''
        d['СД_Стат_2'] = ''
        d['СД_Стат_3'] = ''
    if d['НРС_чек']:
        d['перечень_хронических_заболеваний'] += 'Нарушение ритма сердца, '
    if d['ИБС_чек']:
        d['перечень_хронических_заболеваний'] += 'ИБС, '
    if d['ПОНМК_чек']:
        d['перечень_хронических_заболеваний'] += 'ПОНМК, '
    if d['Ожирение_чек']:
        d['перечень_хронических_заболеваний'] += 'Ожирение, '
    if d['Гипотиреоз_чек']:
        d['перечень_хронических_заболеваний'] += 'Гипотиреоз, '
    if d['Гипертиреоз_чек']:
        d['перечень_хронических_заболеваний'] += 'Гипертиреоз, '
    if d['Гастрит_чек']:
        d['перечень_хронических_заболеваний'] += 'Гастрит, '
    if d['Астма_чек']:
        d['перечень_хронических_заболеваний'] += 'Бронхиальная астма, '
    if d['ХАН_чек']:
        d['перечень_хронических_заболеваний'] += f"Атеросклероз артерий "\
                                                 f"н/конечностей, "
    if d['БЦА_чек']:
        d['перечень_хронических_заболеваний'] += 'Атеросклероз БЦА, '
    if d['ВИЧ_чек']:
        d['перечень_хронических_заболеваний'] += 'ВИЧ-инфекция, '
    if d['ВГС_чек']:
        d['перечень_хронических_заболеваний'] += f"Хронический вирусный "\
                                                 f"гепатит С, "
    if d['ВГБ_чек']:
        d['перечень_хронических_заболеваний'] += f"Хронический вирусный "\
                                                 f"гепатит В, "
    if d['Другие_сопут_чек']:
        d['перечень_хронических_заболеваний'] += d['Другие_сопут']

    if d['перечень_хронических_заболеваний'] == '':
        d['перечень_хронических_заболеваний'] = 'Отрицает'
    else:
        if d['перечень_хронических_заболеваний'][-2] == ',':
            tmp = d['перечень_хронических_заболеваний'][:-2]
            d['перечень_хронических_заболеваний'] = tmp

    if d['хрипы_чек'] == 'нет':
        d['хрипы'] = 'Хрипов нет'
    else:
        d['хрипы'] = f"Хрипы: {d['хрипы_1']}, {d['хрипы_2']} {d['хрипы_3']}"

    if d['одышка_чек'] == 'нет':
        d['одышка'] = 'Одышки нет'
    else:
        d['одышка'] = f"Одышка: {d['одышка_1']}, {d['одышка_2']}, "\
                      f"{d['одышка_3']}"

    if d['тоны_сердца_3'] == '-----':
        d['тоны_сердца'] = f"{d['тоны_сердца_1']}, {d['тоны_сердца_2']}"
    else:
        d['тоны_сердца'] = f"{d['тоны_сердца_1']}, "\
                           f"{d['тоны_сердца_2']}, "\
                           f"{d['тоны_сердца_3']}"

    if d['шумы_сердца_чек'] == 'нет':
        d['шумы_сердца'] = 'не выслушиваются'

    if d['Мочеиспускание_доп'] == '-----':
        d['Мочеиспускание'] = f"{d['Мочеиспускание_1']}, "\
                              f"{d['Мочеиспускание_2']}"
    else:
        d['Мочеиспускание'] = f"{d['Мочеиспускание_1']}, "\
                              f"{d['Мочеиспускание_2']}, "\
                              f"{d['Мочеиспускание_доп']}"

    obj_IMT = f"Рост: {d['рост']} см. Вес: {d['вес']} кг. "\
              f"ИМТ: {calc_BMI(int(d['рост']), int(d['вес']))[0]} кг/м2. "

    numerical_values = f"\tТемпература тела {d[f'Температура{x}']} С.\t"\
                       f"АД {d[f'АД_сист{x}']}/{d[f'АД_диаст{x}']} "\
                       f"мм.рт.ст.\n"\
                       f"\tЧДД {d[f'ЧДД{x}']} в 1 минуту. "\
                       f"SpO2 {d[f'Сатурация{x}']} %.\t"\
                       f"ЧСС {d[f'ЧСС{x}']} уд/мин. "

    obj_all_values = f"Кожные покровы: {d['кожа']}, {d['высыпания']}. "\
                     f"Слизистые оболочки: {d['слизистые']}. "\
                     f"Лимфоузлы: {d['лимфоузлы']}. "\
                     f"Дыхание: {d['дыхание_1']}; "\
                     f"{d['дыхание_2']}; {d['дыхание_3']}. "\
                     f"{d['хрипы']}. {d['одышка']}. "\
                     f"Тоны сердца: {d['тоны_сердца']}. "\
                     f"Шумы сердца: {d['шумы_сердца']}. "\
                     f"Живот: {d['живот_1']}, "\
                     f"{d['живот_2']}, {d['живот_3']}. "\
                     f"Стул: {d['стул_1']}, {d['стул_2']}, {d['стул_3']}. "\
                     f"Мочеиспускание: {d['Мочеиспускание']}. "\
                     f"{d['Общ_статус_дополнение']}"

    st_pr_obj_no_IMT = f"Общее состояние: {d['Общее_состояние']}.\n" \
                       f"{numerical_values}\n" \
                       f"{obj_all_values}"

    st_pr_obj_with_IMT = f"Общее состояние: {d['Общее_состояние']}.\n" \
                         f"{obj_IMT}\n" \
                         f"{numerical_values}\n" \
                         f"{obj_all_values}"

    if any((d['рост'], d['вес'])) == '':
        d['Соматический_статус'] = st_pr_obj_no_IMT
    else:
        d['Соматический_статус'] = st_pr_obj_with_IMT
    d['Соматический_статус_для_дневников'] = obj_all_values
