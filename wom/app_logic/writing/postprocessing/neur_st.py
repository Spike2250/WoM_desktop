from wom.app_logic.service_func import (prepare_data_mrc_ash,
                                        what_paresis,
                                        severity_of_paresis)


def update_after_neur_st(d, time_line, i=None):
    '''
    '''
    if time_line == 'adm':
        x = ''
    elif time_line == 'dis':
        x = '_вып'
    elif time_line == f'динамика_{i}':
        x = f'_{i}'

    if d[f'Менингеальные_1{x}'] == 'ЕСТЬ':
        if d[f'Менингеальные_3{x}'] != '-----':
            d[f'Менингеальные_знаки{x}'] = f"вызываются. " \
                                           f"{d[f'Менингеальные_2{x}']}. " \
                                           f"{d[f'Менингеальные_3{x}']}"
        else:
            d[f'Менингеальные_знаки{x}'] = f"вызываются. " \
                                           f"{d[f'Менингеальные_2{x}']}"
    else:
        d[f'Менингеальные_знаки{x}'] = f"не вызываются"

    if d[f'Речь_1{x}'] == 'сохранена':
        d[f'Речь{x}'] = d[f'Речь_1{x}']
    elif d[f'Речь_1{x}'] == 'дизартричная':
        d[f'Речь{x}'] = f"{d[f'дизартрия{x}']} {d[f'дизартрия_степень{x}']}."
    else:  # считаем, что афазия
        if d[f'дизартрия{x}'] == 'отсутствует':
            d[f'Речь{x}'] = f"{d[f'Речь_2{x}']} {d[f'Речь_1{x}']} " \
                            f"{d[f'Речь_3{x}']}."
        else:
            d[f'Речь{x}'] = f"{d[f'Речь_2{x}']} {d[f'Речь_1{x}']} " \
                            f"{d[f'Речь_3{x}']}. {d[f'дизартрия{x}']} " \
                            f"{d[f'дизартрия_степень{x}']}."

    if d[f'дизартрия{x}'] == 'отсутствует':
        d[f'Дизартрия_текст{x}'] = d[f'дизартрия{x}']
    else:
        d[f'Дизартрия_текст{x}'] = f"{d[f'дизартрия{x}']} " \
                                   f"{d[f'дизартрия_степень{x}']}"

    if d[f'мышечный_тонус_2{x}'] == '-----':
        d[f'Мышечный_тонус{x}'] = d[f'мышечный_тонус_1{x}']
    else:
        d[f'Мышечный_тонус{x}'] = f"{d[f'мышечный_тонус_1{x}']}, " \
                                  f"{d[f'мышечный_тонус_2{x}']}"

    if d[f'VII_пара_дополнение{x}'] == '-----':
        d[f'VII_доп{x}'] = ''
    else:
        if d[f'VII_пара_дополнение{x}'][-2] == '.':
            d[f'VII_доп{x}'] = d[f'VII_пара_дополнение{x}']
        else:
            d[f'VII_доп{x}'] = f"{d[f'VII_пара_дополнение{x}']}. "

    if d[f'мышечный_тонус_2{x}'] == '-----':
        d[f'Мышечный_тонус{x}'] = d[f'мышечный_тонус_1{x}']
    else:
        d[f'Мышечный_тонус{x}'] = f"{d[f'мышечный_тонус_1{x}']}, " \
                                  f"{d[f'мышечный_тонус_2{x}']}"

    if d[f'чувствительность_2{x}'] == '-----':
        if d[f'чувствительность_текст{x}'] == '':
            d[f'Чувствительность{x}'] = f"{d[f'чувствительность_1{x}']}."
        else:
            d[f'Чувствительность{x}'] = f"{d[f'чувствительность_1{x}']}. " \
                                        f"{d[f'чувствительность_текст{x}']}."
    else:
        if d[f'чувствительность_текст{x}'] == '':
            d[f'Чувствительность{x}'] = f"{d[f'чувствительность_1{x}']}, " \
                                        f"{d[f'чувствительность_2{x}']}."
        else:
            d[f'Чувствительность{x}'] = f"{d[f'чувствительность_1{x}']}, " \
                                        f"{d[f'чувствительность_2{x}']}. " \
                                        f"{d[f'чувствительность_текст{x}']}."

    if d[f'координация_текст{x}'] == '':
        d[f'Координация_движений{x}'] = f"Координационные пробы - " \
                                        f"{d[f'координация_1{x}']}. " \
                                        f"{d[f'координация_2{x}']}."
    else:
        d[f'Координация_движений{x}'] = f"Координационные пробы - " \
                                        f"{d[f'координация_1{x}']}. " \
                                        f"{d[f'координация_2{x}']}. " \
                                        f"{d[f'координация_текст{x}']}."

    if d[f'экстрапирамидные_1{x}'] == 'не нарушена':
        d[f'Экстрапирамидные{x}'] = d[f'экстрапирамидные_1{x}']
    else:
        if d[f'экстрапирамидные_2{x}'] == '-----':
            if d[f'экстрапирамидные_3{x}'] == '-----':
                d[f'Экстрапирамидные{x}'] = d[f'экстрапирамидные_1{x}']
            else:
                d[f'Экстрапирамидные{x}'] = f"{d[f'экстрапирамидные_1{x}']}" \
                                            f"{d[f'экстрапирамидные_3{x}']}"
        else:
            if d[f'экстрапирамидные_3{x}'] == '-----':
                d[f'Экстрапирамидные{x}'] = f"{d[f'экстрапирамидные_1{x}']}" \
                                            f"{d[f'экстрапирамидные_2{x}']}"
            else:
                d[f'Экстрапирамидные{x}'] = f"{d[f'экстрапирамидные_1{x}']}" \
                                            f"{d[f'экстрапирамидные_2{x}']}" \
                                            f"{d[f'экстрапирамидные_3{x}']}"

    if d[f'NS_дополнение{x}'] != '':
        d[f'NS_доп{x}'] = f"\n{d[f'NS_дополнение{x}']}"
    else:
        d[f'NS_доп{x}'] = d[f'NS_дополнение{x}']

    if d[f'функциональный_статус_дополнение{x}'] != '':
        d[f'функ_статус_доп{x}'] = f"\n{d[f'функциональный_статус_дополнение{x}']}"  # noqa: E501
    else:
        d[f'функ_статус_доп{x}'] = d[f'функциональный_статус_дополнение{x}']

    # Формирование подписи о силе в конечностях
    mrc_ash_data = prepare_data_mrc_ash(d, 'первичный')
    type_paresis = what_paresis(mrc_ash_data)
    severity = severity_of_paresis(mrc_ash_data)
    if type_paresis == 'Hemiparesis R':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в правых'
    elif type_paresis == 'Monoparesis R superior':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в правой руке'
    elif type_paresis == 'Monoparesis R inferior':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в правой ноге'
    elif type_paresis == 'Hemiparesis L':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в левых'
    elif type_paresis == 'Monoparesis L superior':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в левой руке'
    elif type_paresis == 'Monoparesis L inferior':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в левой ноге'
    elif type_paresis == 'No paresis':
        d[f'Сила_в_конечностях{x}'] = 'достаточная'
    elif type_paresis == 'Paraparesis superior':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в руках'
    elif type_paresis == 'Paraparesis inferior':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена в ногах'
    elif type_paresis == 'Tetraparesis':
        d[f'Сила_в_конечностях{x}'] = f'{severity} снижена во всех конечностях'

    ns_general_info = f"\tСознание {d[f'Сознание{x}']}. " \
                      f"ШКГ (GCS) - {d[f'ШКГ{x}']} баллов. " \
                      f"RASS - {d[f'RASS{x}']} баллов. " \
                      f"Менингеальные знаки – " \
                      f"{d[f'Менингеальные_знаки{x}']}.\n" \
                      f"\tКонтакт - {d[f'Контакт{x}']}. " \
                      f"Ориентирование (в месте, времени и собственной " \
                      f"личности) - {d[f'Ориентирование{x}']}. " \
                      f"Речь - {d[f'Речь{x}']}. " \
                      f"Функции тазовых органов - {d[f'ФТО{x}']}. "

    ns_cranial_nerves = f"\tЧМН: Обоняние {d[f'обоняние{x}']}. " \
                        f"Острота зрения {d[f'острота_зрения{x}']}. " \
                        f"Поля зрения - {d[f'поля_зрения{x}']}. " \
                        f"Зрачки {d[f'зрачки{x}']}, " \
                        f"фотореакция {d[f'фотореакция{x}']}. " \
                        f"Аккомодация - {d[f'аккомодация{x}']}. " \
                        f"Конвергенция - {d[f'конвергенция{x}']}. " \
                        f"Движения глазных яблок - " \
                        f"{d[f'движения_гл_яблок{x}']}. " \
                        f"Парез глазодвигательных мышц - " \
                        f"{d[f'парез_глазодвиг{x}']}. " \
                        f"Птоз - {d[f'птоз{x}']}. " \
                        f"Нистагм - {d[f'нистагм{x}']}. " \
                        f"Чувствительность на лице {d[f'V_пара{x}']}. " \
                        f"Ветви тройничного нерва - " \
                        f"{d[f'V_пара_Ветви{x}']}, " \
                        f"проверка по к.Зельдера - " \
                        f"{d[f'V_пара_Зельдер{x}']}. " \
                        f"Лицо и мимика - {d[f'VII_пара{x}']}. " \
                        f"{d[f'VII_доп{x}']}" \
                        f"Слух {d[f'слух{x}']}. " \
                        f"Центральное головокружение - " \
                        f"{d[f'центр_головокружение{x}']}. " \
                        f"Фонация - {d[f'фонация{x}']}. " \
                        f"Мягкое небо {d[f'мягкое_небо{x}']}. " \
                        f"Глотание - {d[f'глотание{x}']}. " \
                        f"Питание {d[f'питание{x}']}. " \
                        f"Дизартрия - {d[f'Дизартрия_текст{x}']}. " \
                        f"Трофика и сила ГКС и трапециевидной мышц " \
                        f"{d[f'XI_пара{x}']}. " \
                        f"Положение языка - {d[f'XII_пара{x}']}."

    ns_moving = f"\tДвижения в конечностях - {d[f'движ_конечности{x}']}. " \
                f"Движения в суставах - {d[f'движ_суставы{x}']}. " \
                f"Движения в позвоночнике - {d[f'движ_позвоночник{x}']}. " \
                f"Сила в конечностях - {d[f'Сила_в_конечностях{x}']}. " \
                f"Мышечный тонус - {d[f'Мышечный_тонус{x}']}. " \
                f"Трофика мышц - {d[f'трофика_мышц{x}']}. " \
                f"СХР с рук {d[f'рефлексы_руки_1{x}']}, " \
                f"{d[f'рефлексы_руки_2{x}']}; " \
                f"СХР с ног {d[f'рефлексы_ноги_1{x}']}, " \
                f"{d[f'рефлексы_ноги_2{x}']}. " \
                f"Патологические рефлексы - " \
                f"{d[f'патологические_рефлексы{x}']}.\n" \
                f"\tЧувствительность - {d[f'Чувствительность{x}']}\n" \
                f"\t{d[f'Координация_движений{x}']}\n" \
                f"\tЭкстрапирамидная сфера - {d[f'Экстрапирамидные{x}']}.\n" \
                f"\tЭпилептический статус - {d[f'эпилептический_статус{x}']}. "

    ns_func_st = f"Самообслуживание - {d[f'функциональный_статус{x}']}. " \
                 f"Ходьба - {d[f'ходьба{x}']}. Походка {d[f'походка{x}']}. " \
                 f"Ходьба по лестнице - {d[f'подъем_по_лестнице{x}']}. " \
                 f"Мелкая моторика {d[f'мелкая_моторика{x}']}. " \
                 f"Одевание - {d[f'одевание{x}']}. " \
                 f"Прием пищи - {d[f'прием_пищи{x}']}. " \
                 f"Письмо - {d[f'письмо{x}']}. " \
                 f"Чтение - {d[f'чтение{x}']}. "

    ns_full = f"{ns_general_info}\n" \
              f"{ns_cranial_nerves}\n" \
              f"{ns_moving}{d[f'NS_доп{x}']}\n" \
              f"Функциональный статус:\n" \
              f"{ns_func_st}{d[f'функ_статус_доп{x}']}"

    ns_simple = f"без отрицательной динамики. \n" \
                f"Функциональный статус:\n" \
                f"{ns_func_st}{d[f'функ_статус_доп{x}']}"

    d[f'Неврологический_статус{x}'] = ns_full
    d[f'Неврологический_статус_сокращенный{x}'] = ns_simple
